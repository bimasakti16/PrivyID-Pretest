1
00:00:00,520 --> 00:00:00,523
1. map = input_text

2
00:00:00,783 --> 00:00:00,785
5. map.put("phone", "6223167132421")

3
00:00:00,792 --> 00:00:00,794
9. map.put("password", "bimabimabima")

4
00:00:00,800 --> 00:00:00,802
13. map.put("country", "indonesia")

5
00:00:00,810 --> 00:00:00,811
17. map.put("latlong", "(-7.753315, 110.360947)")

6
00:00:00,820 --> 00:00:00,822
21. map.put("device_token", "redmi note 5")

7
00:00:00,833 --> 00:00:00,835
25. map.put("device_type", 1)

8
00:00:00,844 --> 00:00:00,846
29. map.put("response_code", 201)

9
00:00:00,852 --> 00:00:00,854
33. callTestCase(findTestCase("Operations About Registers/Register/Pages/Send registration data"), ["phone":map.get("phone"), "password":map.get("password"), "country":map.get("country"), "device_token":map.get("device_token"), ... ], STOP_ON_FAILURE)

10
00:00:01,449 --> 00:00:01,450
1. response = sendRequest(findTestObject("Register/RegisterAccount", ["phone":phone, "password":password, "country":country, "latlong":latlong, "device_token":device_token, "device_type":device_type]))

11
00:00:03,622 --> 00:00:03,624
5. json_string = response.getResponseText()

12
00:00:03,640 --> 00:00:03,641
9. json_response_code = statusCode

13
00:00:03,655 --> 00:00:03,657
37. callTestCase(findTestCase("Operations About Registers/Register/Pages/Verify expected value equals with input text"), ["expected_response_code":map.get("response_code")], STOP_ON_FAILURE)

14
00:00:03,934 --> 00:00:03,935
1. switch (json_response_code)

15
00:00:03,943 --> 00:00:03,944
2. if (verifyMatch(json_response_code.toString(), expected_response_code.toString(), false, STOP_ON_FAILURE))

16
00:00:03,973 --> 00:00:03,974
1. Register.verifyResponseCode201()

17
00:00:04,075 --> 00:00:04,076
6. break

